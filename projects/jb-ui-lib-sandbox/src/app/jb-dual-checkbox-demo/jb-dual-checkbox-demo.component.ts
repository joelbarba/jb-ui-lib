import {Component, OnInit} from '@angular/core';

@Component({
  selector: 'app-jb-dual-checkbox-demo',
  templateUrl: './jb-dual-checkbox-demo.component.html',
  styleUrls: ['./jb-dual-checkbox-demo.component.scss']
})

export class JbDualCheckboxDemoComponent implements OnInit {
  public name = jbDualCheckboxDoc.name;
  public desc = jbDualCheckboxDoc.desc;
  public api = jbDualCheckboxDoc.api;
  public instance = jbDualCheckboxDoc.instance;
  public value;
  public printValue;
  public label = 'view.common.active';
  public ngModelValue;

  // ---- This is the logic to manage autogenerated code example ----
  public brStr = `\n`;
  public bsStr = `\n             `;
  public customCompCode = ``;
  public compConf = {
    jbLabel: 'view.common.active',
    ngModelValue: this.ngModelValue,
    isDisabled: false,
    isClassBlock: false,
    isClassFlat: false,
    labelOne: 'view.common.yes',
    labelTwo: 'view.common.no'
  };

  public dualCheckboxHtmlStructure = `<div class="dual-checkbox">
  <jb-label [jbText]="jbLabel"></jb-label>
  <div>
    <jb-checkbox
      [jbLabel]="jbLabelOptionOne"
      [(ngModel)]="checkboxes.yes"
      (ngModelChange)="onChange('yes')"
      [jbDisabled]="jbDisabled"
    ></jb-checkbox>
    <jb-checkbox
      [jbLabel]="jbLabelOptionTwo"
      [(ngModel)]="checkboxes.no"
      (ngModelChange)="onChange('no')"
      [jbDisabled]="jbDisabled"
    ></jb-checkbox>
  </div>
</div>`;

  public checkboxHtmlStructure = `<div class="checkbox">
  <label>
    <input type="checkbox" [disabled]="jbDisabled"
           [ngModel]="ngModel" (ngModelChange)="onChange($event)">
    <span class="check-box icon-checkmark3"></span>
    <span class="check-text" [class.has-text]="!!jbLabel">{{jbLabel}}</span>
  </label>
</div>`;

  public blockExample = `<jb-dual-checkbox jbLabel="Inline Dual Checkbox"></jb-dual-checkbox>
<jb-dual-checkbox class="block" jbLabel="Block Dual Checkbox"></jb-dual-checkbox>`;

  public upComp = () => {
    this.customCompCode = `<jb-dual-checkbox `;

    let compClasses = '';
    if (this.compConf.isClassBlock) { compClasses += (!!compClasses.length ? ' ' : '') + 'block'; }

    if (!!compClasses) { this.customCompCode += `class="${compClasses}"` + this.bsStr; }

    if (this.compConf.jbLabel) { this.customCompCode += `[jbLabel]="${this.compConf.jbLabel}"`; }

    if (this.compConf.isDisabled) { this.customCompCode += this.bsStr + `[jbDisabled]="true"`; }

    if (this.compConf.labelOne) { this.customCompCode += this.bsStr + `[jbLabelOptionOne]="${this.compConf.labelOne}"`; }

    if (this.compConf.labelTwo) { this.customCompCode += this.bsStr + `[jbLabelOptionTwo]="${this.compConf.labelTwo}"`; }

    this.customCompCode += (`>` + this.brStr + `</jb-dual-checkbox>`);
  };

  public returnedValues = () => {
    return this.printValue = this.value === undefined ? 'undefined' : this.value;
  };

  ngOnInit() { }
}
export const jbDualCheckboxDoc = {
  name    : `jb-dual-checkbox`,
  uiType  : 'component',
  desc    : `Implements jb-checkbox to generate a dual boolean checkbox.`,
  api     : `
[(ngModel)]        : The ngModel directive is linked to the jb-checkbox boolean value.
[jbDisabled]       : Optional - Boolean value to disable (true) the input
[jbLabel]          : Optional - set dual checkbox label
[jbLabelOptionOne] : Optional - set custom checkbox 'true' option label, default = Yes
[jbLabelOptionTwo] : Optional - set custom checkbox 'false' option label, default = No`,
  instance: `<jb-dual-checkbox [(ngModel)]="defaultValue" jbLabel="Check me"></jb-dual-checkbox>`,
  demoComp: JbDualCheckboxDemoComponent
};
