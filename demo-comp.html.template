<!-- [[COMPONENT_NAME]] = 'jb-btn' -->

<h2>{{name}}</h2>
<hr/>
<h5>{{desc}}</h5>
<p>This is a nice thing...</p>

<h5 class="mt-4">Parameters:</h5>
<div class="col-12"><pre>{{api}}</pre></div>


<!--[[COMPONENT_NAME]] Customization-->
<div class="whiteBg">
  <div class="row">
    <div class="col-5 marB15">
      <h5 class="marB25">[[COMPONENT_NAME]] Customization:</h5>
      <div>
        <!--<jb-dropdown class="full-width" name="dasda"-->
        <!--             [(ngModel)]="selObj10"-->
        <!--             [jbList]="myList"-->
        <!--             [jbRequired]="compConf.isRequired"-->
        <!--             [jbDisabled]="compConf.isDisabled"-->
        <!--             [jbLabel]="(compConf.hasLabel ? compConf.labelText : '')"-->
        <!--             [jbSelect]="(compConf.hasSelect && !!compConf.selectField) ? compConf.selectField : null"-->
        <!--             [jbRender]="(compConf.hasRender ? compConf.renderExp : '')">-->
        <!--</jb-dropdown>-->
      </div>
      <div>
        <div class="code-box pad15">
          <pre>{{customCompCode}}</pre>
        </div>
      </div>
    </div>

    <div class="col-7">

      <div class="row marT15">
        <div class="col-2 padT5"> <jb-checkbox [(ngModel)]="compConf.isRequired" (ngModelChange)="upComp()" jbLabel="Is Required"></jb-checkbox> </div>
      </div>

      <div class="row marT15">
        <div class="col-2 padT5"> <jb-checkbox [(ngModel)]="compConf.isDisabled" (ngModelChange)="upComp()" jbLabel="Is Disabled"></jb-checkbox> </div>
      </div>

      <div class="row marT15">
        <div class="col-2 padT5"> <jb-checkbox [(ngModel)]="compConf.hasLabel" (ngModelChange)="upComp()" jbLabel="Has Label"></jb-checkbox> </div>
        <div class="col-10" style="margin-bottom: -5px;"> <jb-input [(ngModel)]="compConf.labelText" (ngModelChange)="upComp()" [jbDisabled]="!compConf.hasLabel"></jb-input> </div>
      </div>

      <div class="row marT10">
        <div class="col-2 padT5"> <jb-checkbox [(ngModel)]="compConf.hasTooltip" (ngModelChange)="upComp()" jbLabel="Has Tooltip"></jb-checkbox> </div>
        <div class="col-10" *ngIf="compConf.hasTooltip">
          <bf-input [(ngModel)]="compConf.tooltipText" (ngModelChange)="upComp()"></bf-input>
        </div>
        <div class="col-2" *ngIf="compConf.hasTooltip"></div>
        <div class="col-5" *ngIf="compConf.hasTooltip">
          bfTooltipPos: <bf-dropdown [(ngModel)]="compConf.tooltipPos" (ngModelChange)="upComp()"
                                     [bfList]="[{ id: 'top', text: 'top' }, { id: 'right', text: 'right' }, { id: 'bottom', text: 'bottom' }, { id: 'left', text: 'left' }]"
                                     bfRender="text" bfSelect="id"> </bf-dropdown>
        </div>
        <div class="col-5" *ngIf="compConf.hasTooltip">
          bfTooltipBody: <bf-dropdown [(ngModel)]="compConf.tooltipBody" (ngModelChange)="upComp()" [bfList]="[{ id: 'true', text: 'true' }, { id: 'false', text: 'false' }]" bfRender="text" bfSelect="id"> </bf-dropdown>
        </div>
      </div>
    </div>

  </div>
</div>

<hr>




<h5 class="mt-4">Examples:</h5>
<div class="col-12 examples-table">
  
  <div class="row">
    <div class="col-5">
      <[[COMPONENT_NAME]]></[[COMPONENT_NAME]]>
    </div>
    <div class="col-7"> <pre>{{instance}}</pre> </div>
  </div>
  
  <div class="row">
    <div class="col-5">
      <[[COMPONENT_NAME]]></[[COMPONENT_NAME]]>
    </div>
    <div class="col-7"> <pre>{{instance2}}</pre> </div>
  </div>

</div>



<!--CSS Styling-->
<div class="row marT40">
  <div class="col-12">
    <hr>
    <h4>CSS Styling</h4>
    <p>The encapsulated styles of the button use a default color. However, we may want to apply different colors externally (depending on the theme)
      <br/>
      To provide a color restyiling based on a SCSS theme you can apply the following rules on a css global level :
    </p>
    <pre>{{ cssReset }}</pre>
  </div>
</div>

